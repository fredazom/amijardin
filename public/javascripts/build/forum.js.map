{"version":3,"sources":["forum.js"],"names":["$","$dispatcher","CreateQuestionButton","broadcastShowEditor","trigger","SHOW_EDITOR","bind","self","$dom","on","this","Form","initValidator","form","validator","validate","ignore","rules","window","questionFormFields","validationRules","messages","s","required","maxlength","ps","e","n","highlight","utils","validatorHighlight","unhighlight","validatorUnhighlight","addMethod","emailValidator","value","element","params","MAX_SIZE","length","init","fields","Input","Textarea","submitButton","SubmitButton","errorMessage","ErrorMessage","id","isDirty","val","trim","html","wysiwyg","getHTML","ajaxSubmit","isValid","PROCESSING","promise","ajax","type","url","data","serialize","cache","then","question","textStatus","jqXHR","SUCCESS","fail","err","ERROR","preventDefault","show","removeClass","hide","addClass","WarningWindow","HIDE_EDITOR","EditorSection","EDITOR_CLOSED","initialValue","_","reduce","result","formField","key","valid","showWarningWindow","warningWindow","hideWarningWindow","warningCancelButton","WarningCancelButton","warningOkButton","WarningOkButton","FORM_DIRTY","showEditor","hideEditor","checkDirty","editorCancelButton","CancelButton","submissionIndicator","SubmissionIndicator","ContentSection","showQuestions","event","hideQuestions","loadErrorMessage","LoadErrorMessage","questionsSection","QuestionsSection","successMessage","SuccessMessage","displayQuestion","date","Date","parse","li","formattedDate","toLocalDateTime","prepend","fetchQuestions","questions","JSON","forEach","q","SUCCESS_LOADING_QUESTIONS","ERROR_LOADING_QUESTIONS"],"mappings":"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","file":"forum.js","sourcesContent":["$(function() {\n    \"use strict\";\n\n    var $dispatcher = $({});\n    var CreateQuestionButton = function() {\n        var self = this;\n        function broadcastShowEditor() {\n            $dispatcher.trigger(CreateQuestionButton.SHOW_EDITOR);\n        }\n        function bind() {\n            self.$dom = $(\".create-button\");\n            self.$dom.on('click', broadcastShowEditor);\n        }\n        bind();\n    };\n    CreateQuestionButton.SHOW_EDITOR = \"showEditor\";\n\n    var Form = function() {\n        var form = this, submitButton, errorMessage;\n        form.fields = {};\n        var Input = function(id) {\n                var self = this;\n                self.$dom = $(\"#\"+id);\n                self.isDirty = function() {\n                    return self.$dom.val().trim() != \"\";\n                };\n            },\n            Textarea = function() {\n                var self = this;\n                self.isDirty = function() {\n                    var html = $(\"#t\").wysiwyg('shell').getHTML();\n                    return html != \"<br>\" && html != \"\";\n                };\n            },\n            SubmitButton = function() {\n                var self = this, promise;\n                function ajaxSubmit(e) {\n\n                    if(form.isValid()) {\n                        $dispatcher.trigger(Form.PROCESSING);\n                        promise = $.ajax({\n                            type: \"POST\",\n                            url: '/forum/question/add',\n                            data: form.$dom.serialize(),\n                            cache: false\n                        });\n                        /*jslint unparam: true*/\n                        promise.then(function (question, textStatus, jqXHR) {\n                            $dispatcher.trigger(Form.SUCCESS, question);\n                        }).fail(function (jqXHR, textStatus, err) {\n                            $dispatcher.trigger(Form.ERROR, err);\n                        });\n\n                    }\n\n                    e.preventDefault();\n\n                };\n                function bind() {\n                    self.$dom = $(\"#submit\");\n                    self.$dom.on('click', ajaxSubmit)\n                };\n                bind();\n            },\n            ErrorMessage = function() {\n                var self = this;\n                function show() {\n                    self.$dom.removeClass(\"hide\");\n                }\n                function hide() {\n                    self.$dom.addClass(\"hide\");\n                }\n                function bind() {\n                    self.$dom = $('.error-message');\n                }\n                bind();\n                $dispatcher.on(Form.ERROR, show);\n                $dispatcher.on(Form.SUCCESS, hide);\n                $dispatcher.on(WarningWindow.HIDE_EDITOR, hide);\n                $dispatcher.on(EditorSection.EDITOR_CLOSED, hide);\n            };\n\n        form.isDirty = function() {\n            var initialValue = false;\n            return _.reduce(form.fields, function(result, formField, key) {\n                return result || formField.isDirty();\n            }, initialValue);\n        };\n\n        form.isValid = function() {\n            return form.$dom.valid();\n        }\n\n        function initValidator() {\n            form.validator = form.$dom.validate({\n                ignore: \":hidden:not(#t)\",\n                rules: window.questionFormFields.validationRules,\n                messages: {\n                    s: {\n                        required: \"Champ obligatoire\",\n                        maxlength: \"Max {0} digits\"\n                    },\n                    ps: {\n                        required: \"Champ obligatoire\",\n                        maxlength: \"Max {0} caractères\"\n                    },\n                    e: {\n                        required: \"Champ obligatoire\",\n                        maxlength: \"Max {0} caractères\"\n                    },\n                    n: { // ne for notify checkbox\n                        maxlength: \"Max {0} caractères\" // avoid injection of whatever it could be\n                    }\n                },\n                highlight: utils.validatorHighlight,\n                unhighlight: utils.validatorUnhighlight\n            });\n\n            $.validator.addMethod(\"extendedemail\", utils.emailValidator, \"Format erroné: email@example.com\");\n\n            $.validator.addMethod(\"textSize\", function (value, element, params) {\n                var MAX_SIZE = params * 1024 * 1024;\n                if (element && element.value) {\n                    if (element.value.length > MAX_SIZE) {\n                        return false;\n                    }\n                }\n                return true;\n            }, \"La taille totale des 'Détails' est limitée à {0} MB\");\n        }\n\n        function init() {\n            form.$dom = $('#question-form');\n            initValidator();\n            form.fields[\"s\"] = new Input(\"s\");\n            form.fields[\"t\"] = new Textarea(\"t\");\n            form.fields[\"ps\"] = new Input(\"ps\");\n            form.fields[\"e\"] = new Input(\"e\");\n            submitButton = new SubmitButton();\n            errorMessage = new ErrorMessage();\n        }\n        init();\n\n    };\n\n    Form.PROCESSING = \"question_processing\";\n    Form.SUCCESS = \"question_add_success\";\n    Form.ERROR = \"question_add_error\";\n\n    var WarningWindow = function() {\n        var warningWindow = this, warningCancelButton, warningOkButton,\n            WarningCancelButton = function(){\n                var self = this;\n                function bind() {\n                    self.$dom = $(\"#close-question-confirmation .cancel\");\n                    self.$dom.on(\"click\", function(){\n                        hideWarningWindow();\n                    });\n                };\n                bind();\n            },\n            WarningOkButton = function(){\n                var self = this;\n                function bind() {\n                    self.$dom = $(\"#close-question-confirmation .ok\");\n                    self.$dom.on(\"click\", function(){\n                        hideWarningWindow();\n                        $dispatcher.trigger(WarningWindow.HIDE_EDITOR);\n                    });\n                };\n                bind();\n            };\n        function showWarningWindow() {\n            warningWindow.$dom.addClass(\"show\");\n        };\n        function hideWarningWindow()  {\n            warningWindow.$dom.removeClass(\"show\");\n        };\n        function bind() {\n            warningWindow.$dom = $(\"#close-question-confirmation\");\n        }\n        function init() {\n            bind();\n            warningCancelButton = new WarningCancelButton();\n            warningOkButton = new WarningOkButton();\n        }\n        $dispatcher.on(EditorSection.FORM_DIRTY, showWarningWindow);\n        init();\n    };\n    WarningWindow.HIDE_EDITOR= \"hideEditor\";\n\n    var EditorSection = function() {\n        var self = this, form, editorCancelButton, submissionIndicator;\n\n        var SubmissionIndicator = function() {\n            var self = this;\n            function show() {\n                self.$dom.removeClass('hide');\n            }\n            function hide() {\n                self.$dom.addClass('hide');\n            }\n            function bind() {\n                self.$dom = $('.submission-indicator');\n            };\n            $dispatcher.on(Form.SUCCESS, hide);\n            $dispatcher.on(Form.ERROR, hide);\n            $dispatcher.on(Form.PROCESSING, show);\n            bind();\n        };\n\n        var CancelButton = function() {\n            var self = this;\n            function bind() {\n                self.$dom = $(\"#cancel\");\n                self.$dom.on('click', checkDirty)\n            };\n            bind();\n        };\n\n        function showEditor() {\n            $(\"#forum-question-section\").removeClass(\"hide\");\n        }\n        function hideEditor() {\n            $(\"#forum-question-section\").addClass(\"hide\");\n        }\n        function checkDirty() {\n            if(form.isDirty()) {\n                $dispatcher.trigger(EditorSection.FORM_DIRTY);\n            } else {\n                hideEditor();\n                $dispatcher.trigger(EditorSection.EDITOR_CLOSED);\n            }\n        }\n        function init() {\n            editorCancelButton = new CancelButton();\n            form = new Form();\n            submissionIndicator = new SubmissionIndicator();\n        }\n        $dispatcher.on(CreateQuestionButton.SHOW_EDITOR, showEditor);\n        $dispatcher.on(WarningWindow.HIDE_EDITOR, hideEditor);\n        $dispatcher.on(Form.SUCCESS, hideEditor);\n        init();\n    };\n    EditorSection.FORM_DIRTY = \"formDirty\";\n    EditorSection.EDITOR_CLOSED = \"closeEditor\";\n\n    var ContentSection = function() {\n        var self = this, questionsSection, loadErrorMessage, successMessage,\n            SuccessMessage = function() {\n                var self = this;\n                function show() {\n                    self.$dom.removeClass(\"hide\");\n                }\n                function bind() {\n                    self.$dom = $('.success-message');\n                }\n                bind();\n                $dispatcher.on(Form.SUCCESS, show);\n            },\n            QuestionsSection = function() {\n\n                var self = this;\n\n                function displayQuestion(question) {\n                    var date = new Date(Date.parse(question.li)),\n                        formattedDate = utils.toLocalDateTime(date);\n                    self.$dom.prepend(\"<div><a href='/forum/question/\"+question.url+\"'>\"+question.s+\"</a><span class='ps'>\"+question.ps+\"</span><span class='d'>\"+formattedDate+\"</span></div>\");\n                }\n\n                function fetchQuestions() {\n                    var promise = $.ajax({\n                        type: \"GET\",\n                        url: '/forum/question',\n                        cache: false\n                    });\n                    /*jslint unparam: true*/\n                    promise.then(function (questions, textStatus, jqXHR) {\n                        try {\n                            questions = JSON.parse(questions);\n                            questions.forEach(function(q){\n                                displayQuestion(q);\n                            });\n                            $dispatcher.trigger(QuestionsSection.SUCCESS_LOADING_QUESTIONS);\n                        } catch(err) {\n                            $dispatcher.trigger(QuestionsSection.ERROR_LOADING_QUESTIONS);\n                        }\n                    }).fail(function (jqXHR, textStatus, err) {\n                        $dispatcher.trigger(QuestionsSection.ERROR_LOADING_QUESTIONS);\n                    });\n                }\n\n                function bind() {\n                    self.$dom = $(\"#forum-content-section .questions\");\n                }\n\n                function init() {\n                    bind();\n                    fetchQuestions();\n                }\n                init();\n            },\n            LoadErrorMessage = function() {\n                var self = this;\n                function show() {\n                    self.$dom.removeClass(\"hide\");\n                }\n                function hide() {\n                    self.$dom.addClass(\"hide\");\n                }\n                function bind() {\n                    self.$dom = $(\"#forum-content-section .error-message\");\n                }\n                bind();\n                $dispatcher.on(QuestionsSection.ERROR_LOADING_QUESTIONS, show);\n                $dispatcher.on(QuestionsSection.SUCCESS_LOADING_QUESTIONS, hide);\n            };\n        QuestionsSection.ERROR_LOADING_QUESTIONS = \"errorLoadingQuestions\";\n        QuestionsSection.SUCCESS_LOADING_QUESTIONS = \"successLoadingQuestions\";\n        function showQuestions(event) {\n            self.$dom.removeClass(\"hide\");\n        }\n        function hideQuestions() {\n            self.$dom.addClass(\"hide\");\n        }\n\n        function bind() {\n            self.$dom = $(\"#forum-content-section\");\n        }\n        function init() {\n            bind();\n            loadErrorMessage = new LoadErrorMessage();\n            questionsSection = new QuestionsSection();\n            successMessage = new SuccessMessage();\n        }\n\n        init();\n\n        $dispatcher.on(CreateQuestionButton.SHOW_EDITOR, hideQuestions);\n        $dispatcher.on(EditorSection.EDITOR_CLOSED, showQuestions);\n        $dispatcher.on(WarningWindow.HIDE_EDITOR, showQuestions);\n        $dispatcher.on(Form.SUCCESS, showQuestions);\n    };\n\n    var editorSection = new EditorSection(), createQuestionButton = new CreateQuestionButton(),\n        contentSection = new ContentSection(), warningWindowInstance = new WarningWindow();\n\n\n});"],"sourceRoot":"/source/"}