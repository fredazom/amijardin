{"version":3,"sources":["questionTemplate.js"],"names":["$","initResponseSection","Form","checkDirty","form","isDirty","$dispatcher","trigger","DIRTY","NOT_DIRTY","hide","$dom","addClass","reset","key","fields","hasOwnProperty","resetAndHide","initValidator","validator","validate","ignore","rules","window","responseFormFields","validationRules","messages","t","required","textEmpty","ps","maxlength","e","qid","highlight","element","errorClass","utils","validatorHighlight","attr","unhighlight","validatorUnhighlight","removeClass","addMethod","emailValidator","value","params","MAX_SIZE","length","text","trim","submitCallback","isValid","promise","id","find","val","PROCESSING","ajax","type","url","data","serialize","cache","then","question","textStatus","jqXHR","SUCCESS","fail","err","ERROR","preventDefault","init","Textarea","Input","submitButton","Button","errorMessage","ShowHide","successMessage","cancelButton","CANCEL_PRESSED","this","initialValue","_","reduce","result","formField","valid","on","show","submissionIndicator","warningWindow","WarningWindow","OK_PRESSED","location","href","initUpdateQuestionSection","UpdateQuestionForm","bind","updateQuestionFormFields","textSize","s","uid","JSON","parse","cancelCallback","Subject","selector","self","setContent","html","EDITOR_BUTTON_PRESSED","questionDetailsContainer","questionUpdateContainer","subject","editDateFormatted","populate","ed","textFormatted","initUpdateResponseSection","UpdateResponseForm","setFocus","$editor","focus","rid","updateResponseForm","updateResponseText","TextFormatted","updateResponseEditDates","EditDateFormatted","responseCommentUpdateView","$textField","setTimeout","questionParsed","r","RawDate","getContent","DateFormatted","toLocalDateTime","Date","rawDate","ResponseSection","$responses","$dates","formatTexts","each","index","responseField","formatDates","dateField","$dateField","RawText","decode","htmlText","formattedText"],"mappings":"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","file":"questionTemplate.js","sourcesContent":["$(function() {\n    \"use strict\";\n\n    var $dispatcher = $({}),\n        RawDate = function(id) {\n            var self = this;\n            self.getContent = function() {\n                return self.$dom.text();\n            };\n            function bind() {\n                self.$dom = $(id);\n            }\n            bind();\n        },\n        DateFormatted = function() {\n            var self = this, rawDate;\n            function populate() {\n                self.$dom.html(utils.toLocalDateTime(new Date(rawDate.getContent())));\n            }\n            function bind() {\n                self.$dom = $(\".dateFormatted\"); // 2 elements with same class\n            }\n            function init() {\n                bind();\n                rawDate = new RawDate('#rawDate');\n                populate();\n            }\n            init();\n        },\n        EditDateFormatted = function(selector) {\n            var self = this, rawDate;\n            function hide() {\n                self.$dom.addClass(\"hide\");\n            }\n            function show() {\n                self.$dom.removeClass(\"hide\");\n            }\n            self.populate = function(data) {\n                if (data === \"\") {\n                    hide();\n                } else {\n                    self.$dom.html(utils.toLocalDateTime(new Date(data)));\n                    show();\n                }\n            };\n            function bind() {\n                self.$dom = $(selector);\n            }\n            function init() {\n                bind();\n            }\n            init();\n        },\n        ResponseSection = function() {\n            var self = this;\n            function bind() {\n                self.$dom = $('#response-section');\n                self.$responses = self.$dom.find(\".text\");\n                self.$dates = self.$dom.find(\".d span\");\n            }\n            function formatTexts() {\n                self.$responses.each(function(index, responseField){\n                    responseField = $(responseField);\n                    responseField.html(responseField.text());\n                });\n            }\n            function formatDates() {\n                self.$dates.each(function(index, dateField){\n                    var $dateField = $(dateField)\n                    if($dateField.html() === \"\") {\n                        $dateField.addClass(\"hide\");\n                        return;\n                    }\n                    $dateField.html(utils.toLocalDateTime(new Date($dateField.html())));\n                });\n            }\n            function init() {\n                bind();\n                formatTexts();\n                formatDates();\n            }\n            init();\n        },\n        RawText = function() {\n            var self = this;\n            self.getContent = function() {\n                return self.$dom.text();\n            };\n            function bind() {\n                self.$dom = $(\"#rawText\");\n            }\n            bind();\n        },\n        TextFormatted = function(selector) {\n            var self = this;\n            function bind() {\n                self.$dom = $(selector);\n            }\n            function decode(text) {\n                text = $(\"<textarea/>\").html(text).text();\n                return text;\n            }\n            function show() {\n                self.$dom.removeClass(\"hide\");\n            }\n            function hide() {\n                self.$dom.addClass(\"hide\");\n            }\n            self.populate = function(htmlText) {\n                var formattedText = decode(htmlText);\n                self.$dom.html(formattedText);\n                if (self.$dom.text().trim() === \"\") {\n                    hide();\n                } else {\n                    show();\n                }\n            }\n            function init() {\n                bind();\n            }\n            init();\n\n        };\n    new DateFormatted();\n    new ResponseSection();\n    var editDateFormatted = new EditDateFormatted(\"#question-details-container .editDateFormatted, #question-update-form .editDateFormatted\");\n    editDateFormatted.populate(new RawDate('#rawEditDate').getContent());\n    var textFormatted = new TextFormatted(\"#textFormatted\");\n    textFormatted.populate(new RawText().getContent());\n\n\n\n    function initResponseSection() {\n\n        // response comment form\n\n        var Form = function() {\n                var form = this, submitButton, errorMessage, successMessage, cancelButton;\n                form.fields = {};\n\n                form.isDirty = function() {\n                    var initialValue = false;\n                    return _.reduce(form.fields, function(result, formField, key) {\n                        return result || formField.isDirty();\n                    }, initialValue);\n                };\n\n                function checkDirty() {\n                    if(form.isDirty()) {\n                        $dispatcher.trigger(Form.DIRTY);\n                    } else {\n                        $dispatcher.trigger(Form.NOT_DIRTY);\n                    }\n                };\n\n                function hide () {\n                    form.$dom.addClass(\"hide\");\n                }\n\n                function reset() {\n                    for (var key in form.fields) {\n                        if (form.fields.hasOwnProperty(key)) {\n                            form.fields[key].reset();\n                        }\n                    }\n                };\n\n                function resetAndHide() {\n                    reset();\n                    hide();\n                }\n\n                form.isValid = function() {\n                    return form.$dom.valid();\n                }\n\n                function initValidator() {\n                    form.validator = form.$dom.validate({\n                        ignore: \":hidden:not(#t, #qid)\",\n                        rules: window.responseFormFields.validationRules,\n                        messages: {\n                            t: {\n                                required: \"Champ obligatoire\",\n                                textEmpty: \"Champ obligatoire\"\n                            },\n                            ps: {\n                                required: \"Champ obligatoire\",\n                                maxlength: \"Max {0} caractères\"\n                            },\n                            e: {\n                                required: \"Champ obligatoire\",\n                                maxlength: \"Max {0} caractères\"\n                            },\n                            qid: {\n                                required: \"Champ obligatoire\",\n                                maxlength: \"Max {0} caractères\"\n                            }\n                        },\n                        highlight: function(element, errorClass) {\n                            utils.validatorHighlight(element, errorClass);\n                            if($(element).attr(\"name\") === 't') {\n                                $('.wysiwyg-container').addClass('editor-error');\n                            }\n                        },\n                        unhighlight: function(element, errorClass) {\n                            utils.validatorUnhighlight(element, errorClass);\n                            if($(element).attr(\"name\") === 't') {\n                                $('.wysiwyg-container').removeClass('editor-error');\n                            }\n                        }\n                    });\n\n                    $.validator.addMethod(\"extendedemail\", utils.emailValidator, \"Format erroné: email@example.com\");\n\n                    $.validator.addMethod(\"textSize\", function (value, element, params) {\n                        var MAX_SIZE = params * 1024 * 1024;\n                        if (element && element.value) {\n                            if (element.value.length > MAX_SIZE) {\n                                return false;\n                            }\n                        }\n                        return true;\n                    }, \"La taille totale des 'Détails' est limitée à {0} MB\");\n\n                    $.validator.addMethod(\"textEmpty\", function(value, element, params) {\n                        if ($('.wysiwyg-editor').text().trim() === '') {\n                            return false;\n                        }\n                        return true;\n                    });\n                }\n\n                function submitCallback(e) {\n                    if(form.isValid()) {\n                        var id = form.$dom.find('#qid').val(), promise;\n                        $dispatcher.trigger(Form.PROCESSING);\n                        promise = $.ajax({\n                            type: \"POST\",\n                            url: '/forum/question/'+id+'/response/add',\n                            data: form.$dom.serialize(),\n                            cache: false\n                        });\n                        promise.then(function (question, textStatus, jqXHR) {\n                            $dispatcher.trigger(Form.SUCCESS, question);\n                        }).fail(function (jqXHR, textStatus, err) {\n                            $dispatcher.trigger(Form.ERROR, err);\n                        });\n\n                    }\n\n                    e.preventDefault();\n                }\n\n                function init() {\n                    form.$dom = $('#response-comment-form');\n                    initValidator();\n                    form.fields[\"t\"] = new utils.Textarea(\"#t\");\n                    form.fields[\"ps\"] = new utils.Input(\"#ps\");\n                    form.fields[\"e\"] = new utils.Input(\"#e\");\n                    submitButton = new utils.Button(\"#response-comment-form .submit\", submitCallback);\n                    errorMessage = new utils.ShowHide(\"#response-comment-section .error-message\");\n                    successMessage = new utils.ShowHide(\"#response-comment-section .success-message\");\n                    cancelButton = new utils.Button(\"#response-comment-form .cancel\", function(e) {\n                        $dispatcher.trigger(Form.CANCEL_PRESSED);\n                    });\n                }\n                init();\n                $dispatcher.on(Form.SUCCESS, function() {\n                    resetAndHide();\n                    errorMessage.hide();\n                    successMessage.show();\n                });\n                $dispatcher.on(Form.ERROR, function() {\n                    errorMessage.show();\n                });\n                $dispatcher.on(Form.PROCESSING, function() {\n                    errorMessage.hide();\n                });\n                $dispatcher.on(Form.CANCEL_PRESSED, checkDirty);\n\n\n            };\n\n        Form.PROCESSING = \"question_processing\";\n        Form.SUCCESS = \"question_add_success\";\n        Form.ERROR = \"question_add_error\";\n        Form.DIRTY = \"form-dirty\";\n        Form.NOT_DIRTY = \"form-not-dirty\";\n        Form.CANCEL_PRESSED = \"cancel-pressed\";\n\n\n        var form = new Form(),\n            submissionIndicator = new utils.ShowHide(\"#response-comment-section .submission-indicator\"),\n            warningWindow = new utils.WarningWindow(\"#close-response-confirmation\", $dispatcher);\n        $dispatcher.on(Form.DIRTY, warningWindow.show);\n        $dispatcher.on(utils.WarningWindow.OK_PRESSED, function() {\n            window.location.href = '/forum';\n        });\n        $dispatcher.on(Form.NOT_DIRTY, function() {\n            window.location.href = '/forum';\n        });\n        $dispatcher.on(Form.SUCCESS, function(){\n            submissionIndicator.hide();\n        });\n        $dispatcher.on(Form.ERROR, function(){\n            submissionIndicator.hide();\n        });\n        $dispatcher.on(Form.PROCESSING, function(){\n            submissionIndicator.show();\n        });\n\n    }\n\n    // end of response comment form\n\n\n\n    // start update question\n\n    function initUpdateQuestionSection() {\n\n        var UpdateQuestionForm = function() {\n            var form = this, submitButton, cancelButton;\n\n            function bind() {\n                form.$dom = $('#question-update-form');\n            }\n\n            function initValidator() {\n                form.validator = form.$dom.validate({\n                    ignore: \":hidden:not(#t, #qid, #uid)\",\n                    rules: window.updateQuestionFormFields.validationRules,\n                    messages: {\n                        t: {\n                            textSize: \"La taille du texte est trop grande\" // size in MB\n                        },\n                        s: {\n                            required: \"Champ obligatoire\",\n                            maxlength: \"Max {0} caractères\"\n                        },\n                        qid: {\n                            required: \"Champ obligatoire\",\n                            maxlength: \"Max {0} caractères\"\n                        },\n                        uid: {\n                            required: \"Champ obligatoire\",\n                            maxlength: \"Max {0} caractères\"\n                        }\n                    },\n                    highlight: function(element, errorClass) {\n                        utils.validatorHighlight(element, errorClass);\n                        if($(element).attr(\"name\") === 't') {\n                            $('.wysiwyg-container').addClass('editor-error');\n                        }\n                    },\n                    unhighlight: function(element, errorClass) {\n                        utils.validatorUnhighlight(element, errorClass);\n                        if($(element).attr(\"name\") === 't') {\n                            $('.wysiwyg-container').removeClass('editor-error');\n                        }\n                    }\n                });\n\n                $.validator.addMethod(\"textSize\", function (value, element, params) {\n                    var MAX_SIZE = params * 1024 * 1024;\n                    if (element && element.value) {\n                        if (element.value.length > MAX_SIZE) {\n                            return false;\n                        }\n                    }\n                    return true;\n                }, \"La taille totale des 'Détails' est limitée à {0} MB\");\n            }\n\n            form.isValid = function() {\n                return form.$dom.valid();\n            }\n\n            function submitCallback(e) {\n                if(form.isValid()) {\n                    var id = form.$dom.find('#qid').val(), promise;\n                    $dispatcher.trigger(UpdateQuestionForm.PROCESSING);\n                    promise = $.ajax({\n                        type: \"PUT\",\n                        url: '/forum/question/'+id+'/update',\n                        data: form.$dom.serialize(),\n                        cache: false\n                    });\n                    promise.then(function (question, textStatus, jqXHR) {\n                        $dispatcher.trigger(UpdateQuestionForm.SUCCESS, JSON.parse(question));\n                    }).fail(function (jqXHR, textStatus, err) {\n                        $dispatcher.trigger(UpdateQuestionForm.ERROR, err);\n                    });\n\n                }\n\n                e.preventDefault();\n            }\n\n            function cancelCallback(e) {\n                $dispatcher.trigger(UpdateQuestionForm.CANCEL_PRESSED);\n            }\n\n            function init() {\n                bind();\n                initValidator();\n                submitButton = new utils.Button(\"#question-update-form .submit\", submitCallback);\n                cancelButton = new utils.Button(\"#question-update-form .cancel\", cancelCallback);\n            }\n            init();\n        },\n        Subject = function(selector) {\n            var self = this;\n            self.show = function() {\n                self.$dom.removeClass('hide');\n            }\n            self.hide = function() {\n                self.$dom.addClass('hide');\n            }\n            function bind() {\n                self.$dom = $(selector);\n            };\n            self.setContent = function(data) {\n                self.$dom.html(data);\n            }\n            bind();\n        };\n        UpdateQuestionForm.PROCESSING = \"update_form_processing\";\n        UpdateQuestionForm.SUCCESS = \"update_form_success\";\n        UpdateQuestionForm.ERROR = \"update_form_error\";\n        UpdateQuestionForm.CANCEL_PRESSED = \"update_form_cancel_pressed\";\n        UpdateQuestionForm.EDITOR_BUTTON_PRESSED = \"update_form_editor_pressed\";\n\n\n        var updateQuestionForm = new UpdateQuestionForm(),\n            questionDetailsContainer = new utils.ShowHide('#question-details-container'),\n            questionUpdateContainer = new utils.ShowHide('#question-update-container'),\n            subject = new Subject('.subject'),\n            errorMessage = new utils.ShowHide('#question-update-container .error-message'),\n            submissionIndicator = new utils.ShowHide('#question-update-container .submission-indicator'),\n            editorButton = new utils.Button('#question-details-container .edition-icon', function(){\n                $dispatcher.trigger(UpdateQuestionForm.EDITOR_BUTTON_PRESSED);\n            });\n        $dispatcher.on(UpdateQuestionForm.CANCEL_PRESSED, function() {\n            questionUpdateContainer.hide();\n            questionDetailsContainer.show();\n            subject.show();\n        });\n        $dispatcher.on(UpdateQuestionForm.EDITOR_BUTTON_PRESSED, function() {\n            questionUpdateContainer.show();\n            questionDetailsContainer.hide();\n            subject.hide();\n        });\n        $dispatcher.on(UpdateQuestionForm.SUCCESS, function(e, question) {\n            editDateFormatted.populate(question.ed);\n            textFormatted.populate(question.t);\n            subject.setContent(question.s);\n            subject.show();\n            questionUpdateContainer.hide();\n            questionDetailsContainer.show();\n            errorMessage.hide();\n            submissionIndicator.hide();\n        });\n        $dispatcher.on(UpdateQuestionForm.PROCESSING, function(e, question) {\n            errorMessage.hide();\n            submissionIndicator.show();\n        });\n        $dispatcher.on(UpdateQuestionForm.ERROR, function(e, question) {\n            errorMessage.show();\n            submissionIndicator.hide();\n        });\n\n    }\n\n    function initUpdateResponseSection() {\n        \n        var UpdateResponseForm = function() {\n            var form = this, submitButton, cancelButton;\n\n            form.hide = function() {\n                form.$dom.addClass(\"hide\");\n            }\n\n            form.show = function() {\n                form.$dom.removeClass(\"hide\");\n                setFocus();\n            }\n\n            form.isValid = function() {\n                return form.$dom.valid();\n            }\n\n            function setFocus() {\n                form.$editor.find('.wysiwyg-editor').focus();\n            }\n\n            function initValidator() {\n                form.validator = form.$dom.validate({\n                    ignore: \":hidden:not(#t, #qid)\",\n                    rules: window.responseFormFields.validationRules,\n                    messages: {\n                        t: {\n                            required: \"Champ obligatoire\",\n                            textEmpty: \"Champ obligatoire\"\n                        }\n                    },\n                    highlight: function(element, errorClass) {\n                        utils.validatorHighlight(element, errorClass);\n                        if($(element).attr(\"name\") === 't') {\n                            $('.wysiwyg-container').addClass('editor-error');\n                        }\n                    },\n                    unhighlight: function(element, errorClass) {\n                        utils.validatorUnhighlight(element, errorClass);\n                        if($(element).attr(\"name\") === 't') {\n                            $('.wysiwyg-container').removeClass('editor-error');\n                        }\n                    }\n                });\n\n                $.validator.addMethod(\"textSize\", function (value, element, params) {\n                    var MAX_SIZE = params * 1024 * 1024;\n                    if (element && element.value) {\n                        if (element.value.length > MAX_SIZE) {\n                            return false;\n                        }\n                    }\n                    return true;\n                }, \"La taille totale des 'Détails' est limitée à {0} MB\");\n\n                $.validator.addMethod(\"textEmpty\", function(value, element, params) {\n                    if ($('.wysiwyg-editor').text().trim() === '') {\n                        return false;\n                    }\n                    return true;\n                });\n            }\n\n            function submitCallback(e) {\n                if(form.isValid()) {\n                    var qid = form.$dom.find('#qid').val(),\n                        rid = form.$dom.find('#rid').val(),\n                        promise;\n                    $dispatcher.trigger(UpdateResponseForm.PROCESSING);\n                    promise = $.ajax({\n                        type: \"PUT\",\n                        url: '/forum/question/'+qid+'/response/'+rid+'/update',\n                        data: form.$dom.serialize(),\n                        cache: false\n                    });\n                    promise.then(function (question, textStatus, jqXHR) {\n                        $dispatcher.trigger(UpdateResponseForm.SUCCESS, question);\n                    }).fail(function (jqXHR, textStatus, err) {\n                        $dispatcher.trigger(UpdateResponseForm.ERROR, err);\n                    });\n\n                }\n\n                e.preventDefault();\n            }\n\n            function bind() {\n                form.$dom = $('#response-comment-update-form');\n                form.$editor = $('#response-comment-update-form .wysiwyg-container');\n            }\n\n            function init() {\n                bind();\n                initValidator();\n                submitButton = new utils.Button(\"#response-comment-update-form .submit\", submitCallback);\n                cancelButton = new utils.Button(\"#response-comment-update-form .cancel\", function(e) {\n                    $dispatcher.trigger(UpdateResponseForm.CANCEL_PRESSED);\n                });\n                setFocus();\n            }\n            init();\n        };\n        UpdateResponseForm.PROCESSING = \"update_response_form_processing\";\n        UpdateResponseForm.SUCCESS = \"update_response_form_success\";\n        UpdateResponseForm.ERROR = \"update_response_form_error\";\n        UpdateResponseForm.CANCEL_PRESSED = \"update_response_form_cancel_pressed\";\n        UpdateResponseForm.EDITOR_BUTTON_PRESSED = \"update_response_form_editor_pressed\";\n        \n        var errorMessage = new utils.ShowHide(\"#response-comment-update-container .error-message\"),\n            updateResponseForm = new UpdateResponseForm(),\n            updateResponseText = new TextFormatted(\"#response-comment-update-view .text\"),\n            updateResponseEditDates = new EditDateFormatted(\"#response-comment-update-form .editDateFormatted, #response-comment-update-view .editDateFormatted\"),\n            submissionIndicator = new utils.ShowHide(\"#response-comment-update-container .submission-indicator\"),\n            editorButton = new utils.Button('#response-comment-update-view .edition-icon', function(){\n                $dispatcher.trigger(UpdateResponseForm.EDITOR_BUTTON_PRESSED);\n            }),\n            responseCommentUpdateView = new utils.ShowHide(\"#response-comment-update-view\");\n\n        responseCommentUpdateView.show = function() {\n            var $textField = responseCommentUpdateView.$dom.find('.text');\n            responseCommentUpdateView.$dom.removeClass('hide');\n            $textField.addClass('highlight-in');\n            setTimeout(function(){\n                $textField.addClass('highlight-out');\n            }, 2000);\n            setTimeout(function(){\n                $textField.removeClass('highlight-in highlight-out');\n            }, 5000);\n        };\n\n        $dispatcher.on(UpdateResponseForm.SUCCESS, function(e, question) {\n            var questionParsed = JSON.parse(question);\n            errorMessage.hide();\n            updateResponseForm.hide();\n            responseCommentUpdateView.show();\n            updateResponseText.populate(questionParsed.r[0].t);\n            updateResponseEditDates.populate(questionParsed.r[0].ed);\n            submissionIndicator.hide();\n        });\n        $dispatcher.on(UpdateResponseForm.ERROR, function() {\n            errorMessage.show();\n            submissionIndicator.hide();\n        });\n        $dispatcher.on(UpdateResponseForm.PROCESSING, function() {\n            errorMessage.hide();\n            submissionIndicator.show();\n        });\n        $dispatcher.on(UpdateResponseForm.CANCEL_PRESSED, function(){\n            updateResponseForm.hide();\n            responseCommentUpdateView.show();\n            errorMessage.hide();\n        });\n        $dispatcher.on(UpdateResponseForm.EDITOR_BUTTON_PRESSED, function(){\n            updateResponseForm.show();\n            responseCommentUpdateView.hide();\n        });\n        \n    }\n\n    if($('#question-update-container').length > 0) {\n        initUpdateQuestionSection();\n    } else if($('#response-comment-update-container').length > 0) {\n        initUpdateResponseSection();\n    } else {\n        initResponseSection();\n    }\n\n\n    //end update question\n});"],"sourceRoot":"/source/"}